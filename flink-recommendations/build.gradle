plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow'
}

group = 'com.ververica'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven { url 'https://repository.apache.org/content/repositories/snapshots/' }
}

ext {
    flinkVersion = '1.20.0'
    kafkaVersion = '3.8.1'
}

dependencies {
    // Apache Flink
    implementation "org.apache.flink:flink-streaming-java:${flinkVersion}"
    implementation "org.apache.flink:flink-clients:${flinkVersion}"
    implementation "org.apache.flink:flink-connector-kafka:3.3.0-1.20"
    implementation "org.apache.flink:flink-connector-files:${flinkVersion}"
    implementation "org.apache.flink:flink-json:${flinkVersion}"
    implementation "org.apache.flink:flink-connector-base:${flinkVersion}"
    implementation "org.apache.flink:flink-cep:${flinkVersion}"

    // Apache Paimon
    implementation "org.apache.paimon:paimon-flink-1.20:0.9.0"
    implementation "org.apache.paimon:paimon-flink-common:0.9.0"
    
    // DeepNetts - local dependency
    implementation files('../libs/deepnetts-community/deepnetts-core/target/deepnetts-core-1.17-SNAPSHOT.jar')
    implementation 'javax.visrec:visrec-api:1.0.5'
    
    // ML dependencies
    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'com.github.haifengl:smile-core:3.0.2'
    
    // Models
    implementation project(':models')
    
    // JSON
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'
    
    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'org.apache.logging.log4j:log4j-slf4j2-impl:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    
    // Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.apache.flink:flink-test-utils:${flinkVersion}"
}

application {
    mainClass = 'com.ververica.composable_job.flink.recommendations.BasketAnalysisJobRefactored'
}

shadowJar {
    mergeServiceFiles()
    append 'META-INF/spring.handlers'
    append 'META-INF/spring.schemas'
    append 'META-INF/spring.tooling'
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer) {
        resource = 'reference.conf'
    }
    zip64 true
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-parameters'
}

// Task to build DeepNetts before compilation
task buildDeepNetts(type: Exec) {
    workingDir '../libs/deepnetts-community/deepnetts-core'
    commandLine 'mvn', 'clean', 'install', '-DskipTests'
}

compileJava.dependsOn buildDeepNetts