package com.ververica.composable_job.flink.recommendations.shared.model;

import java.io.Serializable;
import java.util.List;
import java.util.Map;

/**
 * Represents a product recommendation event.
 *
 * Types of recommendations:
 * - BASKET_BASED: Recommendations based on items in cart
 * - VIEW_BASED: Recommendations based on viewed product
 * - SESSION_BASED: Recommendations based on session history
 *
 * PATTERN: Broadcast State Output
 * Generated by RecommendationGeneratorFunction using broadcast patterns.
 *
 * Used by:
 * - RecommendationGeneratorFunction (emits recommendations)
 * - Kafka sinks (product-recommendations, websocket_fanout)
 * - Frontend UI (real-time recommendation display)
 */
public class RecommendationEvent implements Serializable {

    private static final long serialVersionUID = 1L;

    public String sessionId;
    public String userId;
    public String recommendationType; // BASKET_BASED, VIEW_BASED, SESSION_BASED
    public List<String> recommendedProducts;
    public double confidence; // 0.0 to 1.0
    public long timestamp;
    public String triggerEvent; // ADD_TO_CART, VIEW_PRODUCT, etc.
    public Map<String, String> context; // Additional context (basketSize, viewedProduct, etc.)

    public RecommendationEvent() {}

    @Override
    public String toString() {
        return String.format("RecommendationEvent{session=%s, type=%s, products=%s, confidence=%.2f}",
            sessionId, recommendationType, recommendedProducts, confidence);
    }
}
