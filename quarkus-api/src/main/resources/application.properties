# Dev Services Configuration
%dev.quarkus.kafka.devservices.enabled=true
%dev.quarkus.kafka.devservices.image-name=docker.redpanda.com/redpandadata/redpanda:v24.2.4
%dev.quarkus.kafka.devservices.port=19092
%dev.quarkus.kafka.devservices.topic-partitions.ecommerce_events=3
%dev.quarkus.kafka.devservices.topic-partitions.ecommerce_processing_fanout=3
%dev.quarkus.kafka.devservices.topic-partitions.products=3
%dev.quarkus.kafka.devservices.topic-partitions.order_events=3
%dev.quarkus.kafka.devservices.topic-partitions.inventory_updates=3
%dev.quarkus.kafka.devservices.topic-partitions.websocket_fanout=3
%dev.quarkus.kafka.devservices.topic-partitions.processing_fanout=3

# Production mode - use external Redpanda
%prod.quarkus.kafka.devservices.enabled=false
mp.messaging.outgoing.websocket_fanout.bootstrap.servers=localhost:19092
mp.messaging.outgoing.websocket_fanout.connector=smallrye-kafka
mp.messaging.outgoing.websocket_fanout.topic=websocket_fanout
mp.messaging.incoming.processing_fanout.bootstrap.servers=localhost:19092
mp.messaging.incoming.processing_fanout.connector=smallrye-kafka
mp.messaging.incoming.processing_fanout.topic=processing_fanout
mp.messaging.incoming.processing_fanout.group.id=quarkus-api-consumer
# Configure the Kafka Streams application
quarkus.kafka-streams.bootstrap-servers=localhost:19092
quarkus.kafka-streams.topics=processing_fanout
quarkus.kafka-streams.application-id=quarkus-ks-consumer
#quarkus.kafka-streams.consumer.session.timeout.ms=250
quarkus.kafka-streams.consumer.heartbeat.interval.ms=200
quarkus.kafka-streams.caching.chat=10
quarkus.kafka-streams.caching.data-points=150

# E-commerce Kafka Configuration (Redpanda)
mp.messaging.outgoing.ecommerce_events.bootstrap.servers=localhost:19092
mp.messaging.outgoing.ecommerce_events.connector=smallrye-kafka
mp.messaging.outgoing.ecommerce_events.topic=ecommerce_events
mp.messaging.incoming.ecommerce_processing_fanout.bootstrap.servers=localhost:19092
mp.messaging.incoming.ecommerce_processing_fanout.connector=smallrye-kafka
mp.messaging.incoming.ecommerce_processing_fanout.topic=ecommerce_processing_fanout
mp.messaging.incoming.ecommerce_processing_fanout.group.id=quarkus-ecommerce-consumer

# Products topic consumer (from inventory job)
mp.messaging.incoming.products-in.bootstrap.servers=localhost:19092
mp.messaging.incoming.products-in.connector=smallrye-kafka
mp.messaging.incoming.products-in.topic=products
mp.messaging.incoming.products-in.group.id=quarkus-products-consumer
mp.messaging.incoming.products-in.auto.offset.reset=earliest

# CORS Configuration
quarkus.http.cors=true
quarkus.http.cors.origins=http://localhost:3000,http://localhost:5173
quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS

# Logging
quarkus.log.file.enable=true
quarkus.log.file.path=logs/application.log
quarkus.log.file.format=%d{yyyy-MM-dd HH:mm:ss} %-5p [%c] (%t) %s%e%n

# Quinoa Configuration for KartShoppe Frontend
quarkus.quinoa.ui-dir=../kartshoppe-frontend
quarkus.quinoa.build-dir=dist
quarkus.quinoa.package-manager-install=true
quarkus.quinoa.package-manager-install.node-version=22.12.0
quarkus.quinoa.package-manager-command.install=install
quarkus.quinoa.package-manager-command.build=run build
quarkus.quinoa.package-manager-command.dev=run dev
quarkus.quinoa.dev-server.port=3000
quarkus.quinoa.enable-spa-routing=true
quarkus.quinoa.ignored-path-prefixes=/api,/q

# Flink Jobs Configuration
%dev.flink.jobs.inventory.enabled=true
%test.flink.jobs.inventory.enabled=false
%prod.flink.jobs.inventory.enabled=false
